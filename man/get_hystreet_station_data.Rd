% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_hystreet_station_data.R
\name{get_hystreet_station_data}
\alias{get_hystreet_station_data}
\title{Retrieve data from a specific hystreet.com station}
\usage{
get_hystreet_station_data(
  hystreetId,
  query,
  no_metadata = FALSE,
  API_token = Sys.getenv("HYSTREET_API_TOKEN")
)
}
\arguments{
\item{hystreetId}{Integer. Mandatory parameter. ID of the requested station. See `get_hystreet_locations()` for available station IDs.}

\item{query}{Named list of query parameters. Supported API parameters ('from', 'to', and 'resolution' are mandatory):
\describe{
  \item{\code{from}}{Character. The start date of the queried timerange. Only accepts valid RFC 3339 formatted timestamps (e.g., '2025-01-12T15:06:13+01:00'). Mandatory parameter.}
  \item{\code{to}}{Character. The end date of the queried timerange. Only accepts valid RFC 3339 formatted timestamps (e.g., '2025-01-22T15:06:13+01:00'). Mandatory parameter.}
  \item{\code{resolution}}{Character. Time resolution for measurements. Mandatory parameter. Accepts the following values: 'hour', 'day', 'week', and 'month'. Mandatory parameter.}
  \item{\code{include_weather_data}}{Logical. Adds data on weather conditions for every measurement if data is available. Weather information is only available with resolution set to 'hour' or 'day'.}
  \item{\code{include_zones}}{Logical. Some streets are split into multiple zones. This parameter ensures to split measurements in the zones of a location and return them more granularly.}
  \item{\code{with_measured_data_only}}{Logical. Filters the measurements to only include measurements with measured data (no modeled data). If set to false, all measurements will be returned.}
  \item{\code{with_object_type}}{Character. Filters the measurements by the object type. This is a main category for organizing measurements. Accepted values: 'PERSON' or 'VEHICLE'.}
  \item{\code{with_object_subtype}}{Character. Filters the measurements by the object subtype. This is a subcategory for organizing measurements. Accepted values: 'ADULT', 'CHILD', 'CAR', 'BUS', 'BICYCLE', or 'TRAM'. If the subtype is not related to the type, it will be ignored.}
}}

\item{no_metadata}{Logical. If `TRUE`, returns only the measurement data as a clean `data.frame`, excluding metadata. Defaults to `FALSE`.}

\item{API_token}{Character. API key for accessing the hystreet.com API.}
}
\value{
A nested list with the query results. If 'no_metadata' is set to TRUE: A `data.frame` containing parsed data from the hystreet.com API with only the raw counts and the timestamp.
}
\description{
Fetches pedestrian count data from a specified station using the hystreet.com API.
}
\details{
Note: Due to performance reasons, the maximum date range for the 'from' and 'to' parameters is limited to 366 days. Use 'from' and 'to' to fetch data in smaller chunks.
}
\examples{
\dontrun{
# Request data with resolution "hour"
res <- get_hystreet_station_data(hystreetId = 148,
                                 query = list(from = "2025-02-20T15:00:00+01:00",
                                              to = "2025-02-25T18:00:00+01:00",
                                              resolution = "hour",
                                              include_weather_data = TRUE,
                                              include_zones = TRUE,
                                              with_measured_data_only = FALSE))
}

}
